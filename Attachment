If you have multiple attachments to add to the Confluence page, you can modify the attachment structure to handle multiple files. Here's an example of how you might structure the JSON data to include multiple attachments:

```groovy
import org.apache.jmeter.protocol.http.control.Header
import org.apache.jmeter.protocol.http.control.HeaderManager
import org.apache.jmeter.protocol.http.sampler.HTTPSamplerProxy
import org.apache.jmeter.protocol.http.util.Base64Encoder

// Example JSON data including Confluence base URL and multiple attachments
def jsonData = '''{
    "confluenceBaseUrl": "https://your-confluence-url",
    "testResults": [
        {"testname": "Test 1", "status": "Pass", "message": "Test 1 passed successfully"},
        {"testname": "Test 2", "status": "Fail", "message": "Test 2 failed due to assertion error"},
        {"testname": "Test 3", "status": "Pass", "message": "Test 3 passed with warnings"}
    ],
    "attachments": [
        {"comment": "Attachment 1", "file": "C:/workspace/file1.txt"},
        {"comment": "Attachment 2", "file": "C:/workspace/file2.txt"},
        {"comment": "Attachment 3", "file": "C:/workspace/file3.txt"}
    ]
}'''

def parsedData = new groovy.json.JsonSlurper().parseText(jsonData)

def confluenceBaseUrl = parsedData.confluenceBaseUrl
def testResults = parsedData.testResults
def attachments = parsedData.attachments

def tableBody = new StringBuilder()
tableBody.append("{panel:title=Test Results}\n")
tableBody.append("|Test Name|Status|Description|\n")

testResults.each { entry ->
    tableBody.append("|${entry.testname}|${entry.status}|${entry.message}|\n")
}

tableBody.append("{panel}")

def attachmentsJson = attachments.collect { attachment ->
    def filePath = attachment.file
    def comment = attachment.comment
    def fileData = [
        "comment": comment,
        "file": filePath
    ]
    new groovy.json.JsonBuilder(fileData).toPrettyString()
}.join(',')

def pageData = [
    "type": "page",
    "title": "Test Results",
    "body": [
        "storage": [
            "value": tableBody.toString(),
            "representation": "storage",
            "attachments": attachmentsJson // Include attachment information
        ]
    ]
]

def jsonBody = new groovy.json.JsonBuilder(pageData).toPrettyString()

def sampler = new HTTPSamplerProxy()
sampler.setDomain(confluenceBaseUrl)
sampler.setPath('/rest/api/content/')
sampler.setMethod('POST')
sampler.addNonEncodedArgument('', jsonBody, '')
sampler.setPostBodyRaw(true)
sampler.setFollowRedirects(true)
sampler.setUseKeepAlive(true)

def headerManager = new HeaderManager()
headerManager.add(new Header('Content-Type', 'application/json')) // Setting Content-Type
sampler.setHeaderManager(headerManager)

def username = 'pinky@dinky.com'
def password = 'donkey'
def proxyHost = 'usrgrp.net'
def proxyPort = 8080 // Make sure proxyPort is an integer
def proxyUsername = 'pinky'
def proxyPassword = 'password123$'

def credentials = "${username}:${password}"
def encodedCredentials = new String
