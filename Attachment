Certainly! To add a new header called `attachments` to the body part of the Confluence page and attach a file from `C:/workspace`, you can modify the `pageData` JSON structure to include this information.

Please note that directly attaching a file through the Confluence REST API might not be straightforward. Usually, the API expects the file to be uploaded separately using a different endpoint. However, I'll demonstrate how you might structure the request to specify an attachment.

Here's an example of how you can include the attachment information in the `pageData`:

```groovy
import org.apache.jmeter.protocol.http.control.Header
import org.apache.jmeter.protocol.http.control.HeaderManager
import org.apache.jmeter.protocol.http.sampler.HTTPSamplerProxy
import org.apache.jmeter.protocol.http.util.Base64Encoder

// Example JSON data (Replace this with your actual JSON file parsing logic)
def jsonData = '''[
    {"testname": "Test 1", "status": "Pass", "message": "Test 1 passed successfully"},
    {"testname": "Test 2", "status": "Fail", "message": "Test 2 failed due to assertion error"},
    {"testname": "Test 3", "status": "Pass", "message": "Test 3 passed with warnings"}
]'''

def jsonObjects = new groovy.json.JsonSlurper().parseText(jsonData)

def baseUrl = 'https://your-confluence-url' // Replace with your Confluence URL
def username = 'pinky@dinky.com'
def password = 'donkey'
def proxyHost = 'usrgrp.net'
def proxyPort = 8080 // Make sure proxyPort is an integer
def proxyUsername = 'pinky'
def proxyPassword = 'password123$'

def tableBody = new StringBuilder()
tableBody.append("{panel:title=Test Results}\n")
tableBody.append("|Test Name|Status|Description|\n")

jsonObjects.each { entry ->
    tableBody.append("|${entry.testname}|${entry.status}|${entry.message}|\n")
}

tableBody.append("{panel}")

// Specify the file path
def filePath = 'C:/workspace/file.txt'

// Example attachment JSON structure
def attachmentData = [
    "comment": "Attachment for the page",
    "file": filePath
]

def attachmentsJson = new groovy.json.JsonBuilder(attachmentData).toPrettyString()

def pageData = [
    "type": "page",
    "title": "Test Results",
    "body": [
        "storage": [
            "value": tableBody.toString(),
            "representation": "storage",
            "attachments": attachmentsJson // Include attachment information
        ]
    ]
]

def jsonBody = new groovy.json.JsonBuilder(pageData).toPrettyString()

def sampler = new HTTPSamplerProxy()
sampler.setDomain(baseUrl)
sampler.setPath('/rest/api/content/')
sampler.setMethod('POST')
sampler.addNonEncodedArgument('', jsonBody, '')
sampler.setPostBodyRaw(true)
sampler.setFollowRedirects(true)
sampler.setUseKeepAlive(true)

def headerManager = new HeaderManager()
headerManager.add(new Header('Content-Type', 'application/json')) // Setting Content-Type
sampler.setHeaderManager(headerManager)

def credentials = "${username}:${password}"
def encodedCredentials = new String(Base64Encoder.encode(credentials.getBytes()))

sampler.addArgument("Authorization", "Basic ${encodedCredentials}")

sampler.setProperty("HTTPSampler.proxyHost", proxyHost)
sampler.setProperty("HTTPSampler.proxyPort", proxyPort as String) // Set proxyPort as a string

sampler.setProxyUsername(proxyUsername)
sampler.setProxyPassword(proxyPassword)

sampler.sample(null)
```

Replace `filePath` with the path to the file you want to attach to the Confluence page. Please note that Confluence REST API might require a different approach to upload attachments. This example includes a basic structure to show how you might include attachment information within the page creation request. Adjust the file path and other variables accordingly.
