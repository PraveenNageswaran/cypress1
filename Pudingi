Certainly! You can modify the Groovy code to execute the AWS CLI command to list S3 bucket objects and then extract the relevant details to construct the JSON structure. Here's an example of how you can achieve this:

```groovy
def command = ["sh", "-c", "aws s3 ls s3://your-bucket-name/your-folder-name/ --recursive"]

def process = command.execute()
def reader = new BufferedReader(new InputStreamReader(process.getInputStream()))
def output = new StringWriter()
def buffer = new char[1024]
int read

while ((read = reader.read(buffer)) != -1) {
    output.write(buffer, 0, read)
}
reader.close()

def result = output.toString()

// Parse the output to extract object keys
def objectKeys = result.split("\\s+").findAll { it.endsWith("/") } as List

// Construct the JSON structure
def jsonStructure = [
    iso: [
        sourceSystems: objectKeys.collect { objectKey ->
            def folderPath = "c:/misc/ting" // Replace with the actual path
            def parts = objectKey.split("/")
            def source = parts[1] // Extract source from the S3 object key
            def businessDate = parts[2] // Extract business date from the S3 object key
            
            [
                source: source,
                businessDate: businessDate,
                s3url: "s3://your-bucket-name/${objectKey}", // Construct the S3 URL
                path: folderPath
            ]
        }
    ]
]

// Convert the JSON structure to a JSON string
String jsonOutput = new groovy.json.JsonBuilder(jsonStructure).toPrettyString()

println(jsonOutput)
```

In this modified example, we still use Groovy to execute the AWS CLI command to list S3 bucket objects and capture the output. We then parse the output to extract the object keys, and based on these keys, we construct the JSON structure containing the S3 object details and their relevant information such as the source, business date, S3 URL, and file path.

Please ensure you replace `"your-bucket-name"` and `"your-folder-name"` with your actual S3 bucket name and folder name.

By running this Groovy script, you can extract the relevant details from the AWS CLI command output and construct the JSON structure you've described.

If you have any further questions or need additional assistance, please feel free to ask!
