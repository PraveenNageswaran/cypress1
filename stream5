import com.fasterxml.jackson.databind.*
import java.nio.file.*

def idsList = vars.getObject("k5_id_list")  
if (!idsList || idsList.isEmpty()) {
    log.error("❌ ERROR: No IDs found for processing!")
    return
}

// ✅ Load K4 JSON
def k4File = Paths.get("C:/workspace/k4.json").toFile()
def objectMapper = new ObjectMapper()
def k4Data = objectMapper.readTree(k4File)  

// ✅ Ensure K4 is an array
if (!k4Data.isArray()) {
    log.error("❌ ERROR: K4 JSON is not an array!")
    return
}

idsList.each { uniqueId ->
    def matchedRecord = null

    // ✅ Correct way to loop through K4 JSON array
    for (def record : k4Data) {
        if (record.has("unique_id") && record.get("unique_id").asText() == uniqueId) {
            matchedRecord = record
            break  // ✅ Stop once match is found
        }
    }

    if (matchedRecord) {
        vars.put("k4_record_" + uniqueId, matchedRecord.toString())  
        log.info("✅ Found matching K4 record for ID: " + uniqueId)
    } else {
        log.warn("❌ No matching record found in K4 for ID: " + uniqueId)
    }
}
