To only log the nodes with a text value when validating the XML structure, you can update the script to skip nodes that do not have text values. Here's the modified script:

```groovy
import groovy.util.XmlSlurper

// Get the XML payload and structure from JMeter variables
def payload = vars.get("payload")
def payload2 = vars.get("payload2")

// Parse the XML strings
def xml = new XmlSlurper().parseText(payload)
def xmlStructure = new XmlSlurper().parseText(payload2)

// Function to validate XML values in the current tag
def validateXmlValues(node, nodeStructure) {
    // Validate current node's value only if it has text
    if (node.text() && nodeStructure.text() && node.text() != nodeStructure.text()) {
        log.info("Mismatch at node '${node.name()}': Expected value '${nodeStructure.text()}', but found '${node.text()}'")
    }

    // Validate child nodes
    node.children().each { child ->
        def childStructure = nodeStructure.children().find { it.name() == child.name() }
        if (childStructure) {
            validateXmlValues(child, childStructure)
        }
    }   
}

// Start validation by navigating through the XML structure
validateXmlValues(xml, xmlStructure)
```

With this script, the validation function only logs the nodes with text values that are different from the expected values. Nodes without text values will be skipped in the logging process, ensuring that only relevant information is included in the logs.
