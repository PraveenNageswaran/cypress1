The error message "500 Internal Server Error - FileUploadException: MissingMultipartBoundaryException: Missing multipart boundary in Content-Type" typically occurs when the server expects a multipart request with defined boundaries for each part but doesn't find them in the request.

To address this, let's adjust the script to construct a proper multipart request with the necessary boundary:

```groovy
import org.apache.jmeter.protocol.http.control.HeaderManager
import org.apache.jmeter.protocol.http.sampler.HTTPSamplerProxy
import org.apache.jmeter.samplers.SampleResult

def confluenceUrl = "YOUR_CONFLUENCE_API_URL" // Replace with your Confluence API URL
def username = "pinky@dinky.com"
def password = "donkey"
def pageId = "YOUR_CONFLUENCE_PAGE_ID" // Replace with the Confluence page ID
def directoryPath = "/path/to/directory" // Replace with the directory path

def files = new File(directoryPath).listFiles({ file -> file.isFile() && file.getName().startsWith("messages") })

def httpClient = new HTTPClient()

files.each { file ->
    def sampler = new HTTPSamplerProxy()
    sampler.setDomain(confluenceUrl)
    sampler.setMethod("POST")
    sampler.setPath("/rest/api/content/$pageId/child/attachment")
    sampler.setFollowRedirects(true)

    def headerManager = new HeaderManager()
    headerManager.add(new org.apache.jmeter.protocol.http.control.Header("Authorization", "Basic " + "${username}:${password}".bytes.encodeBase64()))
    headerManager.add(new org.apache.jmeter.protocol.http.control.Header("X-Atlassian-Token", "no-check")) // Set Atlassian token
    headerManager.add(new org.apache.jmeter.protocol.http.control.Header("Content-Type", "multipart/form-data; boundary=--JMeterBoundary")) // Set Content-Type with boundary
    sampler.setHeaderManager(headerManager)

    def fileBytes = new File(file.getAbsolutePath()).readBytes()

    def requestBody = """
    --JMeterBoundary
    Content-Disposition: form-data; name="file"; filename="${file.getName()}"
    Content-Type: application/octet-stream
    
    ${new String(fileBytes)}
    --JMeterBoundary--
    """

    sampler.setUseKeepAlive(true)
    sampler.setPostBodyRaw(true)
    sampler.setArguments(new org.apache.jmeter.config.Arguments()) // Clear existing arguments
    sampler.addNonEncodedArgument("", requestBody, "") // Attach the multipart body directly

    def sampleResult = sampler.sample(null).getSampleResult()
    log.info("File ${file.getName()} uploaded with response code: ${sampleResult.getResponseCode()}")
}

httpClient.close()
```

This script constructs a proper multipart request by setting the `Content-Type` header with a defined boundary and formatting the request body accordingly.

Adjust the placeholders like `YOUR_CONFLUENCE_API_URL`, `YOUR_CONFLUENCE_PAGE_ID`, `username`, `password`, and `/path/to/directory` with your specific values.
