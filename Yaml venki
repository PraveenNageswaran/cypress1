Apologies for the oversight. It seems the YAML file might be empty or not properly structured. Let's add some error handling to ensure the script runs smoothly even if there are empty or malformed YAML files. Here's the modified script:

```groovy
import org.yaml.snakeyaml.Yaml
import org.apache.commons.io.FileUtils

// Load YAML file
def yamlData = FileUtils.readFileToString(new File("path/to/your/file.yaml"))

// Parse YAML
def yaml = new Yaml()
def yamlObjects = yaml.loadAll(yamlData)

// Initialize headers and CSV content
def headers = ""
def csvContent = ""

// Extract headers from the first YAML object
if (yamlObjects.hasNext()) {
    headers = yamlObjects.next().keySet().join(",")
    csvContent += headers + "\n"
} else {
    log.error("YAML file is empty or contains no valid YAML objects.")
}

// Generate CSV rows
while (yamlObjects.hasNext()) {
    def obj = yamlObjects.next()
    def values = obj.values().join(",")
    csvContent += values + "\n"
}

// Write CSV content to file
if (!csvContent.empty) {
    def csvFile = new File("path/to/your/output.csv")
    FileUtils.writeStringToFile(csvFile, csvContent, "UTF-8")
    log.info("CSV file saved at: " + csvFile.absolutePath)
} else {
    log.error("No valid YAML objects found to convert to CSV.")
}
```

This script now checks for empty or malformed YAML files and logs appropriate error messages. It only proceeds with the conversion if there are valid YAML objects to process. Adjust the file paths as needed, and let me know if you encounter any further issues!
