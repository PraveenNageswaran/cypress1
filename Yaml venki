import org.yaml.snakeyaml.Yaml
import org.apache.commons.io.FileUtils

// Load YAML file
def yamlFile = new File('C:/Workspace/pp.yaml')
def yamlData = FileUtils.readFileToString(yamlFile, "UTF-8")

// Parse YAML
def yaml = new Yaml()
def yamlObjects = yaml.loadAll(yamlData)

// Initialize CSV content
def csvContent = ""

// Function to flatten nested maps
def flattenMap(map, prefix = '') {
    map.collectMany { key, value ->
        if (value instanceof Map) {
            flattenMap(value, "$prefix$key.")
        } else {
            ["$prefix$key": value]
        }
    }
}

// Initialize headers
def headers = []

// Generate CSV rows
yamlObjects.each { yamlObject ->
    def flatMap = flattenMap(yamlObject)
    
    // Update headers
    headers.addAll(flatMap.keySet())
    headers = headers.unique()
    
    // Generate CSV rows
    def rowValues = headers.collect { flatMap[it] ?: "" }
    csvContent += rowValues.join(",") + "\n"
}

// Write CSV content to file
def outputFile = new File('C:/Workspace/output.csv')
FileUtils.writeStringToFile(outputFile, (headers.join(",") + "\n" + csvContent), "UTF-8")

log.info("CSV file saved at: ${outputFile.absolutePath}")
