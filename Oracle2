def tableA = vars.getObject("result_set_tableA")
def tableB = vars.getObject("result_set_tableB")

// Function to find mismatched columns and values for a row
def findMismatchedColumns(rowA, rowB) {
    def mismatchedColumns = [:]
    
    rowA.each { colName, valueA ->
        def valueB = rowB[colName]
        if (valueA != valueB) {
            mismatchedColumns[colName] = [valueA, valueB]
        }
    }

    mismatchedColumns
}

// Compare the two tables
def matchedRows = tableA.intersect(tableB)
def mismatchedRowsInA = tableA - matchedRows
def mismatchedRowsInB = tableB - matchedRows

// Print the mismatched columns and values
log.info("Mismatched Rows in Table A:")
mismatchedRowsInA.each { rowA ->
    def rowB = tableB.find { it.id == rowA.id } // Adjust the condition based on your primary key or unique identifier
    def mismatchedColumns = findMismatchedColumns(rowA, rowB)
    
    log.info("Table A Row: ${rowA}, Mismatched Columns: ${mismatchedColumns}")
}

log.info("Mismatched Rows in Table B:")
mismatchedRowsInB.each { rowB ->
    def rowA = tableA.find { it.id == rowB.id } // Adjust the condition based on your primary key or unique identifier
    def mismatchedColumns = findMismatchedColumns(rowA, rowB)

    log.info("Table B Row: ${rowB}, Mismatched Columns: ${mismatchedColumns}")
}
