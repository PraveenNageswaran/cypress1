Certainly! To create a table in Confluence REST API using the provided JSON data (`testname`, `status`, `message`), we'll modify the existing script to construct a table with three columns: `Test Name`, `Status`, and `Description`. Then, we'll populate the table rows with the corresponding values from your JSON data.

Here's how you can update the script:

```groovy
import org.apache.jmeter.protocol.http.control.Header
import org.apache.jmeter.protocol.http.control.HeaderManager
import org.apache.jmeter.protocol.http.sampler.HTTPSamplerProxy
import org.apache.jmeter.protocol.http.util.Base64Encoder

// Example JSON data (Replace this with your actual JSON file parsing logic)
def jsonData = '''[
    {"testname": "Test 1", "status": "Pass", "message": "Test 1 passed successfully"},
    {"testname": "Test 2", "status": "Fail", "message": "Test 2 failed due to assertion error"},
    {"testname": "Test 3", "status": "Pass", "message": "Test 3 passed with warnings"}
]'''

def jsonObjects = new groovy.json.JsonSlurper().parseText(jsonData)

def baseUrl = 'https://your-confluence-url' // Replace with your Confluence URL
def username = 'pinky@dinky.com'
def password = 'donkey'
def proxyHost = 'usrgrp.net'
def proxyPort = 8080 // Make sure proxyPort is an integer
def proxyUsername = 'pinky'
def proxyPassword = 'password123$'

def tableBody = new StringBuilder()
tableBody.append("{panel:title=Test Results}")
tableBody.append("|Test Name|Status|Description|\n")

jsonObjects.each { entry ->
    tableBody.append("|${entry.testname}|${entry.status}|${entry.message}|\n")
}

tableBody.append("{panel}")

def sampler = new HTTPSamplerProxy()
sampler.setDomain(baseUrl)
sampler.setPath('/rest/api/content/')
sampler.setMethod('POST')
sampler.addNonEncodedArgument('', "{\"type\":\"page\",\"title\":\"Test Results\",\"body\":{\"storage\":{\"value\":\"${tableBody.toString()}\",\"representation\":\"storage\"}}}", '')
sampler.setPostBodyRaw(true)
sampler.setFollowRedirects(true)
sampler.setUseKeepAlive(true)

def headerManager = new HeaderManager()
headerManager.add(new Header('Content-Type', 'application/json')) // Setting Content-Type
sampler.setHeaderManager(headerManager)

def credentials = "${username}:${password}"
def encodedCredentials = new String(Base64Encoder.encode(credentials.getBytes()))

sampler.addArgument("Authorization", "Basic ${encodedCredentials}")

sampler.setProperty("HTTPSampler.proxyHost", proxyHost)
sampler.setProperty("HTTPSampler.proxyPort", proxyPort as String) // Set proxyPort as a string

sampler.setProxyUsername(proxyUsername)
sampler.setProxyPassword(proxyPassword)

sampler.sample(null)
```

This script constructs a Confluence table with the data from your JSON (`testname`, `status`, `message`) and sends it to Confluence using the REST API. Replace `jsonData` with your actual JSON parsing logic if it's coming from a file or another source. Adjust other variables like Confluence URL, credentials, and proxy settings as needed.
