import org.json.JSONArray
import org.json.JSONObject
import java.nio.file.Files
import java.nio.file.Paths
import java.nio.charset.StandardCharsets
import java.io.File

// Common function to handle creating and updating the JSONArray with test case data
def updateTestCasesJsonFile(Set<String> passtestcase, Set<String> failedset, String filePath) {
    JSONArray jsonArray
    
    // Check if the file exists, create a new JSON array if it doesn't
    File jsonFile = new File(filePath)
    if (jsonFile.exists()) {
        // Read the existing content from the file
        String fileContent = new String(Files.readAllBytes(Paths.get(filePath)), StandardCharsets.UTF_8)
        jsonArray = new JSONArray(fileContent)
    } else {
        // Create a new blank JSONArray if the file doesn't exist
        jsonArray = new JSONArray()
        log.info("No existing file found. Creating a new blank JSONArray.")
    }

    // Function to add test cases to JSONArray
    def addTestCasesToJSONArray = { testSet, statusValue ->
        testSet.each { testCaseId ->
            JSONObject testCase = new JSONObject()
            testCase.put("testCaseId", testCaseId)
            testCase.put("status", statusValue)
            testCase.put("url", "https://example.com/testcase/" + testCaseId) // Replace with actual URL if needed
            jsonArray.put(testCase)
        }
    }

    // Add passed test cases with status 1
    addTestCasesToJSONArray(passtestcase, 1)

    // Add failed test cases with status 2
    addTestCasesToJSONArray(failedset, 2)

    // Convert the updated JSONArray back to a string (pretty printed)
    String updatedJsonString = jsonArray.toString(4)

    // Save the updated JSONArray back to the file (create file if not present)
    Files.write(Paths.get(filePath), updatedJsonString.getBytes(StandardCharsets.UTF_8))

    // Log success message
    log.info("Updated JSONArray saved to file: " + filePath)
}

// Sample sets for passed and failed test cases
Set<String> passtestcase = new HashSet<>(Arrays.asList("TC_001", "TC_002"))  // Example passed test case set
Set<String> failedset = new HashSet<>(Arrays.asList("TC_003", "TC_004"))     // Example failed test case set

// Define the file path where the JSON should be saved
String filePath = "C:/path_to_your_folder/your_json_file.json"

// Call the function to update the JSON file with the test case data
updateTestCasesJsonFile(passtestcase, failedset, filePath)
